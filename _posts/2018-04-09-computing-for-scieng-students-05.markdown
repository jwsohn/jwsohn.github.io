---
layout: post
title:  "이공계 대학생/대학원생을 위한 컴퓨팅 강좌 5:"
date:   2018-04-09 22:30:00 -0500
published: no
categories: 강좌
---

# 이공계 대학생/대학원생을 위한 컴퓨팅 강좌 5: 컴퓨터 언어 선택

안녕하세요. @jwsohn입니다. 오늘 포스팅에서는 어떤 컴퓨터 언어를 배우는 것이
좋은지에 대해서 제 개인적인 생각을 정리해 보도록 하겠습니다.

## 어떤 컴퓨터 언어를 배우는 것이 좋은가? 

컴퓨터 언어는 크게 보면 도구(tool)이라고 볼 수 있을 겁니다. 컴퓨터로 어떤
작업을 수행하는 데 그 방법을 지시해 놓은 명세서(specification)가 컴퓨터
언어이니까요. 그런 까닭에, 컴퓨터 언어를 고르기 전에 중요하게 생각해야 할 것은
컴퓨터를 쓰는 여러분들의 필요(needs)가 되겠습니다. 

### 기본을 탄탄히
 
프로그래밍 혹은 코딩 작업은 컴퓨터를 사용하는 작업입니다. 따라서, 코딩을
하려면 디지털 컴퓨터라는 기계에 대한 기본적인 이해가 있어야 할 것이고,
일반적인 컴퓨터 언어의 설계와 자주 쓰이는 기법에 대해서도 이해가 있어야 할
것입니다.

그런데 이 두가지를 다 고려하기는 쉽지 않은 일인 것 같습니다. 우선, 필요에 따라
코딩을 하는 분들은 컴퓨터 언어에 대한 이해도가 낮은 경우가 많습니다. 이런
경우는 한번쓰고 재활용이 쉽지 않은 코드가 나오기 쉽습니다. 보통 컴퓨터 공학을
전공하지 않은 분들이 이런 경우에 많이 해당되는 것 같습니다.

그리고, 컴퓨터 언어에 대해 이해도가 높은 분들은 기술 결정론적(technological
determinism)에 입장에 빠지는 경우가 많습니다. 도구만 잘 만들면 문제도
해결된다는 관점인데요. 이 경우는 코드는 괜찮은데 사용자의 필요는 제대로 맞추지
못하는 경우가 자주 발생합니다. 이런 상황은 컴퓨터 공학 전공자분들에게 잘
발생하는 것 같습니다.

그래서 어떤 컴퓨터 언어를 배우는 것이 좋은가 하는 질문은 질문 자체에 큰 의미가
없다고 생각합니다. 어떤 언어를 배우든 간에 기본적인 지식은 습득해야 하니까요.
대학 교과 과정으로 따지면 컴퓨터 공학 비전공자라도 **자료 구조론(data
structure)**은 확실히 배우는 것이 좋다고 생각합니다.

그렇다고 아무 언어나 잡을 필요는 없겠지요. 언어는 기본적으로는 유행하는 언어를
배우면 된다고 생각합니다. 달리 말해 사람들이 많이 쓰는 언어를 배우는 것이죠.
사람들이 많이 쓰는 언어일수록 API(application program interface)나
모듈(module)들이 가져다 쓰기 좋게 잘 만들어져 있고 이를 사용해서 코딩을 쉽게
하기가 용이하기 마련입니다.  개인적으로는 Java나 Python을 기본으로 추천합니다.

### 사용자의 필요에 따라

그렇다면 사용자의 필요(needs)는 어떻게 할까요? 여기서 여러분들의 선택이 갈릴
수 있습니다. 필요에 따라 적절한 도구를 쓰는 것이 좋을테니까요. 일단 이 글이
이공계 대학생/대학원생을 대상으로 하고 있으니 해결해야 할 문제에 따라 구분을
해 보도록 하겠습니다.

#### 컴퓨터로 계산하기: 수치해석 (Numerical analysis)

컴퓨터로 계산을 해야 하는 경우입니다. 그렇다면 계산 속도가 빠르고
행렬(matrix) 연산이 쉬운 언어를 쓰는 것이 좋겠습니다. 쓰기 쉽고 속도가 빠른
Matlab이나 Python(Numpy, Matplotlib)을 추천합니다. 

참고로 기계공학과의 문제 중에서 빠른 CPU 속도와 대량의 Memory를 필요로 하는
경우가 있습니다. 이런 경우는 어쩔 수 없이 속도가 빠른 언어를 써야 하는데요.
C나 C++, 심지어는 Fortran까지 쓰는 경우도 있습니다. 그런데 의외로 Fortran이
언어가 간단하며 계산이 빠르고 정확하다는 장점이 있으니 혹시 대학원 과정에서
Fortran을 다루어야 하는 상황이 전개된다면 부담갖지 마시고 써 보시길
추천합니다.

수치해석쪽 코딩을 한다면 객체지향기법(Object oriented programming)과 같은
개념은 그다지 중요하지 않습니다. 자료구조론까지만 열심히 하시면 된다고
생각합니다.

#### 잘 모르겠다?

Data Structure를 Java로 배우시길 추천합니다. 그 이후에는 Java를 계속 들고 파든 
Python 같은 언어로 옮겨가든 알아서 하시길.


컴퓨터 언어 선택: 전공과 비전공. 그래도 기본은 다 해야

전체적인 추세: 통계학의 중요성. Coding은 나쁘게 말하면 method 혹은 tool.

전공자: Java 추천. 여전히 Java가 필요. Python도 같이 추천. 

Java: JDK가 매우 잘 설계된 API. 이것만 잘 써도 인생이 편리함. 다만, OOP 지식
필요. Strong typed language.

비전공자: Python 추천. 기타 R이나 Matlab, Python Matplotlib (notebook, etc) 같은 것 추천.
함수형 언어 특성이 있음. map and reduce.

Python 역시 기본 API가 잘 되어 있음. Python 2와 3 사이의 호환성 문제가 여전히
남아 있음. 이제는 3 추천

Numerical analysis: Python 역시 추천. Numpy. 

## Coding style

## Programming
  * Java and JDK (well designed)
  * Python
    - matplotlib or matlab (matrix computation)
    - numpy and scipy
  * R. But not for application development.

